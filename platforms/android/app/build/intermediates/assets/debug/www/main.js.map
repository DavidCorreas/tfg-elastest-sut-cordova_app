{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/angular-material.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth-interceptor.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.service.ts","./src/app/error-interceptor.ts","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/posts/post-create/mime-type.validator.ts","./src/app/posts/post-create/post-create.component.ts","./src/app/posts/post-create/post-create.component.html","./src/app/posts/post-list/post-list.component.ts","./src/app/posts/post-list/post-list.component.html","./src/app/posts/post.module.ts","./src/app/posts/posts.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n  exports: [\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatProgressSpinnerModule,\n    MatPaginatorModule,\n    MatDialogModule\n  ]\n})\nexport class AngularMaterialModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes, Router } from '@angular/router'\nimport { PostListComponent } from './posts/post-list/post-list.component';\nimport { PostCreateComponent } from './posts/post-create/post-create.component';\nimport { AuthGuard } from './auth/auth.guard';\n\nconst routes: Routes = [\n  { path: '', component: PostListComponent },\n  { path: 'create', component: PostCreateComponent, canActivate: [AuthGuard] },\n  { path: 'edit/:postId', component: PostCreateComponent, canActivate: [AuthGuard] },\n  { path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule) }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\nexport class AppRoutingModule{}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'front-angular';\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authService.autoAuthUser();\n  }\n}\n","<app-header></app-header>\n<main>\n  <router-outlet></router-outlet>\n</main>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\n\nimport { HeaderComponent } from './header/header.component';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AuthInterceptor } from './auth/auth-interceptor';\nimport { ErrorInterceptor } from './error-interceptor';\nimport { ErrorComponent } from './error/error.component';\nimport { AngularMaterialModule } from './angular-material.module';\nimport { PostModule } from './posts/post.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    ErrorComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AngularMaterialModule,\n    PostModule\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true},\n    {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true}\n  ],\n\n  bootstrap: [AppComponent],\n  entryComponents: [ErrorComponent]\n})\nexport class AppModule { }\n","import { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AuthService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const token = this.authService.getToken();\n    const authRequest = req.clone({\n      headers: req.headers.set('Authorization', 'Bearer ' + token)\n    });\n    return next.handle(authRequest);\n  }\n}\n","import {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n    const isAuth = this.authService.getIsAuth();\n    if(!isAuth) {\n      this.router.navigate(['/auth/login']);\n    }\n    return isAuth;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthData } from './auth-data.model';\nimport { Subject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { environment } from '../../environments/environment';\n\nconst BACKEND_URL = environment.apiUrl + '/user'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private token: string;\n  private authStatusListener = new Subject<boolean>();\n  private isAuthenticated = false;\n  private tokenTimer: any;\n  private userId: string;\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  getToken() {\n    return this.token;\n  }\n\n  getUserId() {\n    return this.userId;\n  }\n\n  getIsAuth() {\n    return this.isAuthenticated;\n  }\n\n  getAuthStatusListener() {\n    return this.authStatusListener.asObservable();\n  }\n\n  createUser(email: string, password: string) {\n    const authData: AuthData = {\n      email: email,\n      password: password,\n    };\n    this.http\n      .post(BACKEND_URL + '/singup', authData)\n      .subscribe(() => {\n        this.router.navigate(['/']);\n      }, () => {\n        this.authStatusListener.next(false);\n      });\n  }\n\n  login(email: string, password: string) {\n    const authData: AuthData = {\n      email: email,\n      password: password,\n    };\n    this.http\n      .post<{ token: string; expiresIn: number, userId: string }>(\n        BACKEND_URL + '/login',\n        authData\n      )\n      .subscribe((response) => {\n        const token = response.token;\n        this.token = token;\n        if (token) {\n          const expiresInDuration = response.expiresIn;\n          this.setAuthTimer(expiresInDuration);\n          this.userId = response.userId;\n          this.isAuthenticated = true;\n          this.authStatusListener.next(true);\n          const now = new Date();\n          const expirationDate = new Date(now.getTime() + expiresInDuration * 1000);\n          this.saveAuthData(token, expirationDate, this.userId);\n          this.router.navigate(['/']);\n        }\n      }, () => {\n        this.authStatusListener.next(false);\n      });\n  }\n\n  autoAuthUser() {\n    const authInfo = this.getAuthData();\n    if (!authInfo) {\n      return;\n    }\n    const now = new Date();\n    const expiresIn = authInfo.expirationDate.getTime() - now.getTime();\n    if (expiresIn > 0) {\n      this.token = authInfo.token;\n      this.userId = authInfo.userId;\n      this.isAuthenticated = true;\n      this.setAuthTimer(expiresIn / 1000);\n      this.authStatusListener.next(true);\n    }\n  }\n\n  logout() {\n    this.token = null;\n    this.userId = null;\n    this.isAuthenticated = false;\n    this.authStatusListener.next(false);\n    this.clearAuthData();\n    clearTimeout(this.tokenTimer);\n    this.router.navigate(['/']);\n  }\n\n  private setAuthTimer(duration: number) {\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n    }, duration * 1000);\n  }\n\n  private saveAuthData(token: string, expirationDate: Date, userId: string) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('expiration', expirationDate.toISOString());\n    localStorage.setItem('userId', userId);\n  }\n\n  private clearAuthData() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiration');\n    localStorage.removeItem('userId')\n  }\n\n  private getAuthData() {\n    const token = localStorage.getItem('token');\n    const expirationDate = localStorage.getItem('expiration');\n    const userId = localStorage.getItem('userId')\n    if (!token || !expirationDate || !userId) {\n      return;\n    } else {\n      return {\n        token: token,\n        expirationDate: new Date(expirationDate),\n        userId: userId\n      }\n    }\n  }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpErrorResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ErrorComponent } from './error/error.component';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private dialog: MatDialog) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        let errorMessage = 'An unkown error occurred!';\n        if (error.error.message) {\n          errorMessage = error.error.message;\n        }\n        this.dialog.open(ErrorComponent, {data: {message: errorMessage}})\n        return throwError(error);\n      }));\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  templateUrl: './error.component.html'\n})\nexport class ErrorComponent {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {message: string}) {}\n}\n","<h1 mat-dialog-mat-card-title>An Error Ocurred!</h1>\n<div mat-dialog-content>\n  <p class=\"mat-body-1\">{{ data.message }}</p>\n</div>\n<div mat-dialog-actions>\n  <button mat-button mat-dialog-close>Okay</button>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  userIsAuthenticated = false;\n  private authListenerSubs: Subscription;\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.authListenerSubs = this.authService.getAuthStatusListener()\n      .subscribe(isAuthenticated => {\n        this.userIsAuthenticated = isAuthenticated;\n      });\n  }\n\n  onLogout() {\n    this.authService.logout();\n  }\n\n  ngOnDestroy() {\n    this.authListenerSubs.unsubscribe();\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <span>\n    <a routerLink=\"/\">MyMessages</a>\n  </span>\n  <span class=\"spacer\"></span>\n  <ul>\n    <li *ngIf=\"userIsAuthenticated\">\n      <a mat-button routerLink=\"/create\" routerLinkActive=\"mat-accent\"\n        >New Post</a\n      >\n    </li>\n    <li>\n      <a\n        mat-button\n        routerLink=\"/auth/login\"\n        routerLinkActive=\"mat-accent\"\n        *ngIf=\"!userIsAuthenticated\"\n        >LogIn</a\n      >\n    </li>\n    <li>\n      <a\n        mat-button\n        routerLink=\"/auth/singup\"\n        routerLinkActive=\"mat-accent\"\n        *ngIf=\"!userIsAuthenticated\"\n        >SingUp</a\n      >\n    </li>\n    <li>\n      <button mat-button *ngIf=\"userIsAuthenticated\" (click)=\"onLogout()\">LogOut</button>\n    </li>\n  </ul>\n</mat-toolbar>\n","import { AbstractControl } from \"@angular/forms\";\nimport { Observable, Observer, of } from \"rxjs\";\n\nexport const mimeType = (\n  control: AbstractControl\n): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\n  if (typeof(control.value) === 'string') {\n    return of(null);\n  }\n  const file = control.value as File;\n  const fileReader = new FileReader();\n  const frObs = Observable.create(\n    (observer: Observer<{ [key: string]: any }>) => {\n      fileReader.addEventListener(\"loadend\", () => {\n        const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4);\n        let header = \"\";\n        let isValid = false;\n        for (let i = 0; i < arr.length; i++) {\n          header += arr[i].toString(16);\n        }\n        switch (header) {\n          case \"89504e47\":\n            isValid = true;\n            break;\n          case \"ffd8ffe0\":\n          case \"ffd8ffe1\":\n          case \"ffd8ffe2\":\n          case \"ffd8ffe3\":\n          case \"ffd8ffe8\":\n            isValid = true;\n            break;\n          default:\n            isValid = false; // Or you can use the blob.type as fallback\n            break;\n        }\n        if (isValid) {\n          observer.next(null);\n        } else {\n          observer.next({ invalidMimeType: true });\n        }\n        observer.complete();\n      });\n      fileReader.readAsArrayBuffer(file);\n    }\n  );\n  return frObs;\n};\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nimport { PostsService } from '../posts.service';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Post } from '../post.model';\nimport { mimeType } from './mime-type.validator';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-post-create',\n  templateUrl: './post-create.component.html',\n  styleUrls: ['./post-create.component.css'],\n})\nexport class PostCreateComponent implements OnInit, OnDestroy {\n  enteredTitle = '';\n  enteredContent = '';\n  post: Post;\n  isLoading = false;\n  form: FormGroup;\n  imagePreview: string;\n  private mode = 'create';\n  private postId: string;\n  private authStatusSub: Subscription;\n\n  constructor(\n    public postsService: PostsService,\n    public route: ActivatedRoute,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService\n      .getAuthStatusListener()\n      .subscribe(() => {\n        this.isLoading = false;\n      });\n    this.form = new FormGroup({\n      title: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(3)],\n      }),\n      content: new FormControl(null, [Validators.required]),\n      image: new FormControl(null, {\n        validators: [Validators.required],\n        asyncValidators: [mimeType],\n      }),\n    });\n\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has('postId')) {\n        this.mode = 'edit';\n        this.postId = paramMap.get('postId');\n        this.isLoading = true;\n        this.postsService.getPost(this.postId).subscribe((postData) => {\n          this.post = {\n            id: postData._id,\n            title: postData.title,\n            content: postData.content,\n            imagePath: postData.imagePath,\n            creator: postData.creator,\n          };\n          this.isLoading = false;\n          this.imagePreview = this.post.imagePath;\n          this.form.setValue({\n            title: this.post.title,\n            content: this.post.content,\n            image: this.post.imagePath,\n          });\n        });\n      } else {\n        this.mode = 'create';\n        this.postId = null;\n      }\n    });\n  }\n\n  onImagePicked(event: Event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({ image: file });\n    this.form.get('image').updateValueAndValidity();\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imagePreview = reader.result as string;\n    };\n    reader.readAsDataURL(file);\n  }\n\n  onSavePost() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    if (this.mode === 'create') {\n      this.postsService.addPost(\n        this.form.value.title,\n        this.form.value.content,\n        this.form.value.image\n      );\n    } else {\n      this.postsService.updatePost(\n        this.postId,\n        this.form.value.title,\n        this.form.value.content,\n        this.form.value.image\n      );\n    }\n\n    this.form.reset();\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n","<mat-card>\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n  <form [formGroup]=\"form\" (submit)=\"onSavePost()\" *ngIf=\"!isLoading\">\n    <mat-form-field>\n      <input\n        matInput\n        type=\"text\"\n        formControlName=\"title\"\n        placeholder=\"Post Title\">\n      <mat-error *ngIf=\"form.get('title').invalid\">Please enter a post title</mat-error>\n    </mat-form-field>\n    <div>\n      <button mat-stroked-button type=\"button\" (click)=\"filePicker.click()\">Pick Image</button>\n      <input type=\"file\" #filePicker (change)=\"onImagePicked($event)\">\n    </div>\n    <div class=\"image-preview\" *ngIf=\"imagePreview !== '' && imagePreview && form.get('image').valid\">\n      <img [src]=\"imagePreview\" [alt]=\"form.value.title\">\n    </div>\n    <mat-form-field>\n      <textarea\n        matInput\n        rows=\"6\"\n        formControlName=\"content\"\n        placeholder=\"Post Content\"></textarea>\n      <mat-error *ngIf=\"form.get('content').invalid\">Please enter a post content</mat-error>\n    </mat-form-field>\n\n    <button mat-raised-button color=\"accent\"\n     type=\"submit\">Save post</button>\n  </form>\n\n</mat-card>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Post } from '../post.model';\nimport { PostsService } from '../posts.service';\nimport { PageEvent } from '@angular/material/paginator';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css'],\n})\nexport class PostListComponent implements OnInit, OnDestroy {\n  // posts = [\n  //   {title: 'Fist Post', content: 'This is the first post\\'s content'},\n  //   {title: 'Second Post', content: 'This is the second post\\'s content'},\n  //   {title: 'Third Post', content: 'This is the third post\\'s content'}\n  // ]\n\n  posts: Post[] = [];\n  private postSub: Subscription;\n  private authListenerSubs: Subscription;\n  userIsAuthenticated = false;\n  isLoading = false;\n  totalPost = 10;\n  postPerPage = 2;\n  currentPage = 1;\n  pageSizeOptions = [1, 2, 5, 10];\n  userId: string;\n\n  // Para tener un objeto en la clase, se puede igualar postsService en el contructor a un atributo de la clase\n  // o poner delante la palabra public\n  constructor(\n    public postsService: PostsService,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.postsService.getPosts(this.postPerPage, this.currentPage);\n    this.userId = this.authService.getUserId();\n    this.postSub = this.postsService\n      .getPostUpdateListener()\n      .subscribe((postData: { posts: Post[]; postCount: number }) => {\n        this.isLoading = false;\n        this.posts = postData.posts;\n        this.totalPost = postData.postCount;\n      });\n    this.authListenerSubs = this.authService\n      .getAuthStatusListener()\n      .subscribe((isAuthenticated) => {\n        this.userIsAuthenticated = isAuthenticated;\n        this.userId = this.authService.getUserId();\n      });\n    this.userIsAuthenticated = this.authService.getIsAuth();\n  }\n\n  onChangedPage(pageData: PageEvent) {\n    this.isLoading = true;\n    this.currentPage = pageData.pageIndex + 1;\n    this.postPerPage = pageData.pageSize;\n    this.postsService.getPosts(this.postPerPage, this.currentPage);\n  }\n\n  onDelete(postId: string) {\n    this.isLoading = true;\n    this.postsService.deletePost(postId).subscribe(() => {\n      this.postsService.getPosts(this.postPerPage, this.currentPage);\n    }, () => {\n      this.isLoading = false;\n    });\n  }\n\n  ngOnDestroy() {\n    this.postSub.unsubscribe();\n    this.authListenerSubs.unsubscribe();\n  }\n}\n","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n<mat-accordion multi=\"true\" *ngIf=\"posts.length > 0 && !isLoading\">\n  <mat-expansion-panel *ngFor=\"let post of posts\">\n    <mat-expansion-panel-header>\n      {{ post.title }}\n    </mat-expansion-panel-header>\n    <div class=\"post-image\">\n      <img [src]=\"post.imagePath\" [alt]=\"post.title\" />\n    </div>\n    <p>{{ post.content }}</p>\n    <mat-action-row *ngIf=\"userIsAuthenticated && userId === post.creator\">\n      <a mat-button color=\"primary\" [routerLink]=\"['/edit', post.id]\">EDIT</a>\n      <button mat-button color=\"warn\" (click)=\"onDelete(post.id)\">\n        DELETE\n      </button>\n    </mat-action-row>\n  </mat-expansion-panel>\n</mat-accordion>\n\n<p class=\"info-text mat-body-1\" *ngIf=\"posts.length <= 0 && !isLoading\">\n  No posts added yet\n</p>\n\n<mat-paginator\n  [length]=\"totalPost\"\n  [pageSize]=\"postPerPage\"\n  [pageSizeOptions]=\"pageSizeOptions\"\n  (page)=\"onChangedPage($event)\"\n  *ngIf=\"posts.length > 0\"\n></mat-paginator>\n","import { NgModule } from \"@angular/core\";\n\nimport { PostCreateComponent } from \"../posts/post-create/post-create.component\";\nimport { PostListComponent } from '../posts/post-list/post-list.component';\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { AngularMaterialModule } from '../angular-material.module';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [\n    PostCreateComponent,\n    PostListComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    RouterModule\n  ],\n})\nexport class PostModule {}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { environment } from '../../environments/environment';\nimport { Post } from './post.model';\n\nconst BACKEND_URL = environment.apiUrl + '/posts';\n\n// Solo creara una instancia de esto en la app\n// Tambien se puede quitar este decorator y meter 'PostsService' en el appModule, en el array de providers\n@Injectable({ providedIn: 'root' })\nexport class PostsService {\n  private posts: Post[] = [];\n  private postsUpdated = new Subject<{ posts: Post[]; postCount: number }>();\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  getPosts(postPerPage: number, currentPage: number) {\n    const queryParams = `?pagesize=${postPerPage}&page=${currentPage}`;\n    this.http\n      .get<{ message: string; posts: any; maxPosts: number }>(\n        BACKEND_URL + '/' + queryParams\n      )\n      .pipe(\n        map((postsData) => {\n          return {\n            posts: postsData.posts.map((post) => {\n              if (environment.apiUrl.includes('express')) {\n                post.imagePath = post.imagePath.replace('localhost', 'express');\n              }\n              return {\n                title: post.title,\n                content: post.content,\n                id: post._id,\n                imagePath: post.imagePath,\n                creator: post.creator\n              };\n            }),\n            maxPosts: postsData.maxPosts,\n          };\n        })\n      )\n      .subscribe(transPostsData => {\n        this.posts = transPostsData.posts;\n        this.postsUpdated.next({\n          posts: [...this.posts],\n          postCount: transPostsData.maxPosts,\n        });\n      });\n  }\n\n  getPostUpdateListener() {\n    return this.postsUpdated.asObservable();\n  }\n\n  getPost(postId: string) {\n    return this.http.get<{\n      _id: string,\n      title: string,\n      content: string,\n      imagePath: string,\n      creator: string\n    }>(BACKEND_URL + '/' + postId);\n  }\n\n  addPost(title: string, content: string, image: File) {\n    const postData = new FormData();\n    postData.append('title', title);\n    postData.append('content', content);\n    postData.append('image', image, title);\n    this.http\n      .post<{ post: Post; message: string }>(\n        BACKEND_URL,\n        postData\n      )\n      .subscribe(() => {\n        this.router.navigate(['/']);\n      });\n  }\n\n  updatePost(\n    postId: string,\n    title: string,\n    content: string,\n    image: File | string\n  ) {\n    let postData: Post | FormData;\n    if (typeof image === 'object') {\n      postData = new FormData();\n      postData.append('id', postId);\n      postData.append('title', title);\n      postData.append('content', content);\n      postData.append('image', image, title);\n    } else {\n      postData = {\n        id: postId,\n        title: title,\n        content: content,\n        imagePath: image,\n        creator: null\n      };\n    }\n    this.http\n      .put<{ message: string; imagePath: string }>(\n        BACKEND_URL + '/' + postId,\n        postData\n      )\n      .subscribe(() => {\n        this.router.navigate(['/']);\n      });\n  }\n\n  deletePost(postId: string) {\n     return this.http\n      .delete<{ message: string }>(BACKEND_URL + '/' + postId);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: \"http://express:3000/api\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}