{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/singup/singup.component.ts","./src/app/auth/singup/singup.component.html"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { SingupComponent } from './singup/singup.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'singup', component: SingupComponent }\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule {}\n","import { NgModule } from '@angular/core';\n\nimport { LoginComponent } from '../auth/login/login.component';\nimport { SingupComponent } from '../auth/singup/singup.component';\nimport { AngularMaterialModule } from '../angular-material.module';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { AuthRoutingModule } from './auth-routing.module';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    SingupComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    AngularMaterialModule,\n    AuthRoutingModule\n  ]\n})\nexport class AuthModule {}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy{\n  isLoading = false;\n  private authStatusListener: Subscription;\n\n  constructor(public authService: AuthService) {}\n\n  ngOnInit() {\n    this.authStatusListener = this.authService.getAuthStatusListener()\n    .subscribe(() => {\n      this.isLoading = false;\n    })\n  }\n\n  onLogin(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.authService.login(form.value.email, form.value.password);\n  }\n\n  ngOnDestroy() {\n    this.authStatusListener.unsubscribe();\n  }\n}\n","<mat-card>\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n  <form (submit)=\"onLogin(loginForm)\" #loginForm=\"ngForm\" *ngIf=\"!isLoading\">\n\n    <mat-form-field>\n      <input\n        matInput\n        name=\"email\"\n        ngModel\n        type=\"email\"\n        placeholder=\"E-Mail\"\n        #emailInput=\"ngModel\"\n        required\n        email>\n      <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid E-mail.</mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input\n        matInput\n        name=\"password\"\n        ngModel\n        type=\"password\"\n        placeholder=\"Password\"\n        #passwordInput=\"ngModel\"\n        required>\n      <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password</mat-error>\n    </mat-form-field>\n\n    <button mat-raised-button color=\"accent\"\n     type=\"submit\">Login</button>\n  </form>\n\n</mat-card>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  templateUrl: './singup.component.html',\n  styleUrls: ['./singup.component.css']\n})\nexport class SingupComponent implements OnInit, OnDestroy{\n  isLoading = false;\n  private authStatusSub: Subscription;\n\n  constructor(public authService: AuthService) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService.getAuthStatusListener()\n      .subscribe(authStatus => {\n        this.isLoading = false;\n      });\n  }\n\n  onSingup(form: NgForm) {\n    if (form.invalid) {\n      return\n    }\n    this.isLoading = true;\n    this.authService.createUser(form.value.email, form.value.password);\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n","<mat-card>\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n  <form (submit)=\"onSingup(singupForm)\" #singupForm=\"ngForm\" *ngIf=\"!isLoading\">\n\n    <mat-form-field>\n      <input\n        matInput\n        name=\"email\"\n        ngModel\n        type=\"email\"\n        placeholder=\"E-Mail\"\n        #emailInput=\"ngModel\"\n        required\n        email>\n      <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid E-mail.</mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input\n        matInput\n        name=\"password\"\n        ngModel\n        type=\"password\"\n        placeholder=\"Password\"\n        #passwordInput=\"ngModel\"\n        required>\n      <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password</mat-error>\n    </mat-form-field>\n\n    <button mat-raised-button color=\"accent\"\n     type=\"submit\">Singup</button>\n  </form>\n\n</mat-card>\n"],"sourceRoot":"webpack:///"}